<Page x:Class="MyWpfApp.tutorial.Tutorial_DIYCat"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MyWpfApp.tutorial"
      mc:Ignorable="d" 
       d:DesignWidth="800"
      Title="Tutorial_DIYCat">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Bongocat_BtnStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>



    <Grid>
        <StackPanel Margin="80,0,0,0">
            <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="修改猫咪形象" FontSize="30" VerticalAlignment="Top" Height="38"/>
            <ScrollViewer Margin="0,10,0,0" Focusable="False"
                        CanContentScroll="False" Height="542"
                        Style="{StaticResource CatScrollViewer}">

                <StackPanel>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        在这个教程页里，你将会了解到如何修改猫咪与按键的形象。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="12" VerticalAlignment="Top" >
                <Run Text="        注意，随着版本更替，此文细节可能会与最新版不一样，但道理都是相通的，此文至少对v0.1.4版本有效。" FontWeight="Bold"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="认识猫咪的原理" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        除了键鼠模式的右手和启动 live2d 模块的情况下的猫咪身体之外，猫咪软件的本质就是一个"/>
                     <Run Text="靠按键触发的图片播放器" FontWeight="Bold"/>
                     <Run Text="，因此我们只需要找到我们想要修改的部分的图片，然后将它替换掉就好了，如果修改的是按键，那么替换完图片之后再修改一下按键映射就好了，本次教程结束。（×" />
                    </TextBlock>
                    
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="了解猫咪的文件分布" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        在最底层的文件夹中，有个config.json，它是存放猫咪设置的文件，我们可以通过它来修改包括键位在内的所有设置。这里的img文件夹便是存放除live2d模型之外所有的素材的文件夹（之后可能会合并到Resources文件夹里）。Resources文件夹是存放live2d模型的文件夹"/>
                    </TextBlock>

                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        img文件夹里有一个standard文件夹和一个keyboard文件夹，这一级是按模式名进行区别的，standard代表标准的键鼠模式，keyboard代表没有鼠标的纯键盘模式，这个keyboard代表纯键盘模式，这个keyboard代表纯键盘模式，这个keyboard代表纯键盘模式，求你们千万不要和这两个文件夹里面的另一个keyboard文件夹搞混了，有不止一个群友在替换素材的时候把本该替换到“img/standard/keyboard/”里的素材替换到“img/keyboard/keyboard/”里去了。"/>
                    </TextBlock>
                    <Image Source="../Resources/tutorial/img_tutorial_6.png" Margin="0,10,0,0" Width="500"/>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top"  >
                <Run Text="        点开standard文件夹，一堆熟悉的图片映如眼帘，应该不需要我解释每张图是什么了吧。这里只提一下前缀带l2d的图片是开启live2d模块的时候使用的图片。"/>
                    </TextBlock>
                    <Image Source="../Resources/tutorial/img_tutorial_5.png" Margin="0,10,0,0" Width="500"/>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="除了图片，修改形象的时候还需要改什么" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        有时需要修改的内容可能会超过窗口的大小，可以通过config.json中的“window_size”来修改窗口的大小。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        standard模式下右手主体的颜色和纹理通过arm.png修改，右手的轮廓颜色通过config.json文件中的“armLineColor”修改，右手的位置通过config.json文件中的“hand_offset”修改。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        对live2d模型的修改不是只改纹理图片就好！超出模型范围的纹理部分是不会显示的，因此建议自制模型而不是直接改原模型的纹理图。live2d是非常容易学的，不要产生畏惧心理。自制的模型需要放在“Resources/cat/”文件夹里，将自己的模型的“xxx.model3.json”文件重命名为“cat.model3.json”就好。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        自制猫咪的live2d模型时请注意，模型的鼠标跟随改变的是X、Y参数，眨眼需要增加眨眼设定，而不是只需要眼睛开闭的参数。模型是能表现呼吸、物理等特性的，但是即使你不设置呼吸参数模型也会有呼吸效果。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        下图为猫咪眨眼的设定路径。"/>
                    </TextBlock>
                    <Image Source="../Resources/tutorial/img_tutorial_7.png" Margin="0,10,0,0" Width="500"/>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="修改键位时应该修改哪些图片" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        以standard模式举例，需要修改底图（后缀为***bg.png的图片）,hand文件夹中表示手部动作的图片，keyboard文件夹中表示按键特效的图片。当然除了替换，增加、减少都是可行的，只要按着其他键的格式来增加、随时保持好图片和按键码的对应关系就不会有问题。"/>
                    </TextBlock>
             
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="对DIY的一些建议" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        当前版本键鼠模式右手依然有形状限制，DIY前应该先了解右手后再进行形象设计。不要等图都画完了才发现右手改不了。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        可以通过修改图片和键码来将侧键改造成鼠标中键，反正一般没观众想看侧键表演。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        猫咪的形象风格没必要画成日系插画，建议保留Q版简笔画的风格。其实，直接在原猫咪的基础上p上自己的形象特征物品就基本制成了一只独一无二又极具辨识度的猫咪。走搞怪路线或许也是一个非常抓眼球的选择。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,100" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        虽然现在猫咪可以设置无限个按键了，但是从观众观感上讲，全键盘仍然是我不建议的设计思路，不但累而且很难把握手的形变程度，观众也很难清楚看清楚主播确切地按了哪个键，而且观众也并不需要知道你的多余键盘操作（甚至可能疏忽之下暴露密码）。相比之下制作一份美观的WASD空格键的键位，或许是个轻松、通用，又很有节目效果的方法。"/>
                    </TextBlock>
                </StackPanel>

            </ScrollViewer>
        </StackPanel>
    </Grid>
</Page>
