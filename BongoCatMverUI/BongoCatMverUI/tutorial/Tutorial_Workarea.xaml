<Page x:Class="MyWpfApp.tutorial.Tutorial_Workarea"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MyWpfApp.tutorial"
      mc:Ignorable="d" 
      d:DesignWidth="800"
      Title="Tutorial_Workarea">


    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Bongocat_BtnStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>



    <Grid>
        <StackPanel Margin="80,0,0,0">
            <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="workarea的设置方法" FontSize="30" VerticalAlignment="Top" Height="38"/>
            <ScrollViewer Margin="0,10,0,0" Focusable="False" Height="542"
                        CanContentScroll="False" 
                        Style="{StaticResource CatScrollViewer}">

                <StackPanel>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        workarea是在未开启强制移动鼠标的情况下，自定义鼠标有效区域的。通常猫咪光标的可动范围只限于主屏，光标在副屏时鼠标只能在边界移动，通过对workarea的设定可以让猫咪的鼠标在副屏有效。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        这个教程中将以双屏的使用情况举例。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="计算需要用到的数据" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        各个屏幕的分辨率和缩放值。"/>
                    </TextBlock>
                    <Image Source="../Resources/tutorial/img_tutorial_10.png"  Margin="10,10,10,0" Width="400"/>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        通过键盘上PrintScreen键所截取的图片，此图用于坐标计算参考。（按键后图片在剪贴板，需要手动ctrl+v粘贴到某处以显示。）"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="第一步：确定坐标系" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        根据PrintScreen截取的图片可以确定多个屏幕的相对位置关系。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        先说一个常识，在计算机中，坐标的原点在左上角，X轴正方向为从左到右，Y轴正方向为从上到下。鼠标光标的坐标原点是在主屏的左上角。注意主屏不是指编号为1的显示器，在上图的设置稍偏下的地方能看到当前屏幕是否为主屏。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="第二步：换算缩放值" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        当多屏的缩放值不同的时候，猫咪获取到的光标的坐标不等于实际坐标，而需要进行换算。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        比如当主屏缩放值为100%，副屏的缩放值为200%时，对于主屏长度为1的内容在副屏被放大到长度为2。因此在副屏中鼠标移动距离2之后才被识别为移动距离1。因此，当多屏但缩放值不同的时候，不能直接设置绝对坐标，而应该对先坐标进行处理。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        不论主屏的缩放值为多少，我们永远以主屏为标准。设主屏缩放值为S1、副屏缩放值为S2的话，那么副屏中的长度放大倍数为S2/S1，所以副屏对于猫咪的实际分辨率为原始分辨率的S1/S2。三屏以上同理，只以主屏为标准即可。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="第三步：计算区域左上角、右下角坐标" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        打开用PrintScreen所截取的图片，里面包含了所有的屏幕，但是我们不能直接用这个截图中的像素来直接计算坐标，而是需要对这张图中每一个缩放值不同的区域（不同屏幕的区域）进行第二步的换算，在换算之后，就能直接进行加减计算了。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="示例1：" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        情景：两个屏幕，主屏分辨率2560*1440，缩放值100%；副屏分辨率1920*1080，缩放值125%。主屏在副屏正左侧，需要使猫咪鼠标可动范围改为副屏。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        左上角X坐标：2560"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        左上角Y坐标：0"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        右下角X坐标：2560+1920*100%/125%=4096"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        右下角Y坐标：1080*100%/125%=864"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="20" VerticalAlignment="Top" >
                <Run Text="示例2：" FontWeight="Bold" />
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        情景：两个屏幕，主屏分辨率1920*1080，缩放值125%；副屏分辨率2560*1440，缩放值100%。主屏在副屏正右侧，需要使猫咪鼠标可动范围改为副屏。"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        左上角X坐标：0-2560*125%/100%=-3200"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        左上角Y坐标：0"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,0" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        右下角X坐标：0"/>
                    </TextBlock>
                    <TextBlock Margin="10,10,10,100" TextWrapping="Wrap"  FontSize="14" VerticalAlignment="Top" >
                <Run Text="        右下角Y坐标：1440*125%/100%=1800"/>
                    </TextBlock>
                </StackPanel>

            </ScrollViewer>
        </StackPanel>
    </Grid>
</Page>
